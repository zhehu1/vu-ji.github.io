{"version":3,"sources":["redux/reducers.js","redux/configureStore.js","reportWebVitals.ts","components/sider/index.tsx","components/layout/index.tsx","App.tsx","pages/index.tsx","pages/babel/index.tsx","components/root/index.tsx","pages/react/react-redux/index.tsx","components/antdMarkdown/index.tsx","router/react.ts","pages/react/react-router/index.tsx","router/others.ts","pages/others/packing/index.tsx","router/index.ts","index.tsx","pages/react/react-router/index.md","pages/others/packing/index.md"],"names":["createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SubMenu","Menu","Sider","Layout","getMenuItem","route","Item","name","path","getSubMenuOpenKeys","routes","key","result","o","curr","startsWith","push","concat","ComSider","useHistory","location","useLocation","useState","selectKeys","setSelectKeys","openkeys","setOpenKeys","routeConfig","useEffect","pathname","className","onClick","e","onOpenChange","keys","pop","openKeys","selectedKeys","mode","map","item","title","Title","Typography","Header","Content","ComLayout","props","level","children","App","renderRoutes","Index","Babel","Root","ReactRedux","Panel","Collapse","Paragraph","Text","Link","defaultProps","options","overrides","reduce","pre","component","p","span","a","MyMarkdown","renderProps","Object","assign","reactPagesConfig","exact","mdDoc","othersPagesConfig","store","createStore","compose","applyMiddleware","routerMiddleware","ReactDOM","render","document","getElementById","console","log","module","exports"],"mappings":"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","file":"static/js/main.e4183798.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history)\n})\n\nexport default createRootReducer","import { createHashHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\n\nexport const history = createHashHistory()\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        // ... other middlewares ...\n      ),\n    ),\n  )\n\n  return store\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FC, useEffect, useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport routeConfig from '@/router'\n\nconst { SubMenu } = Menu;\n\nconst { Sider } = Layout;\n\nconst getMenuItem = (route: any) => {\n    return <Menu.Item key={route.path}>{route.name}</Menu.Item>\n}\n\nconst getSubMenu = (route: any) => {\n    return <SubMenu key={route.path} title={route.name}>\n        {\n            route.routes.map((item: any) => {\n                return getMenuItem(item)\n            })\n        }\n    </SubMenu>\n}\n\nconst getSubMenuOpenKeys = (routes: any = [], key: string) : Array<string> => {\n    let result: Array<string> = []\n    for (let o in routes) {\n        const curr = routes[o]\n        if (key.startsWith(curr.path) && curr.routes) {\n            result.push(curr.path)\n            result.concat(getSubMenuOpenKeys(curr.routes, key))\n            break\n        }\n    }\n    return result\n}\n\nconst ComSider: FC = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const [ selectKeys, setSelectKeys ] = useState(['/'])\n    const [ openkeys, setOpenKeys ] = useState<Array<string>>([''])\n    const { routes } = routeConfig[0]\n\n    const handleClick = (e: any) => {\n        history.push(e.key)\n    };\n\n    const handleOpenKeys = (keys: Array<React.Key>) => {\n        setOpenKeys([keys.pop()] as Array<string>)\n    }\n\n    useEffect(() => {\n        setSelectKeys([location.pathname])\n        setOpenKeys(getSubMenuOpenKeys(routes, location.pathname))\n    }, [location, routes]);\n\n    return <Sider className=\"site-layout-background\">\n        <Menu\n            onClick={handleClick}\n            onOpenChange={handleOpenKeys}\n            openKeys={openkeys}\n            selectedKeys={selectKeys}\n            mode=\"inline\"\n        >\n            {\n                routes.map((item: any) => {\n                    if (item.routes) {\n                        return getSubMenu(item)\n                    } else {\n                        return getMenuItem(item)\n                    }\n                })\n            }\n        </Menu>\n    </Sider>\n};\n\n\nexport default ComSider","import { FC } from 'react'\nimport { Layout, Typography } from 'antd';\nimport ComSider from '../sider'\nimport './index.less'\n\nconst { Title } = Typography;\n\nconst { Header, Content } = Layout;\n\nconst ComLayout: FC = (props) => {\n    return <Layout className=\"site-layout\">\n        <Header className=\"site-layout_header site-layout-background\">\n            <Title level={3}>vu-ji</Title>\n        </Header>\n        <Layout>\n            <ComSider />\n            <Content className=\"site-layout_content\">{props.children}</Content>\n        </Layout>\n    </Layout>\n};\n\n\nexport default ComLayout","import { FC } from 'react'\nimport './App.less';\nimport { renderRoutes, RouteConfig } from 'react-router-config'\nimport MyLayout from './components/layout'\n\nconst App: FC<RouteConfig> = ({ route }) => {\n  return <MyLayout>\n    {renderRoutes(route.routes)}\n  </MyLayout>\n}\n\nexport default App;","import { FC } from 'react'\nimport { Typography } from 'antd';\n\n// const { Title, Paragraph, Text } = Typography;\nconst { Title } = Typography;\n\nconst Index: FC = () => {\n    // const [ellipsis, setEllipsis] = React.useState(true);\n\n    return <>\n        <Title level={2}>首页内容</Title>\n        {/* <Title level={2}>h2.h2 title</Title>\n        <Switch\n            checked={ellipsis}\n            onChange={() => {\n                setEllipsis(!ellipsis);\n            }}\n        />\n\n        <Paragraph ellipsis={ellipsis}>\n        Ant Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team.\n        </Paragraph>\n\n        <Paragraph ellipsis={ellipsis ? { rows: 2, expandable: true, symbol: 'more' } : false}>\n        Ant Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team. Ant\n        Design, a design language for background applications, is refined by Ant UED Team.\n        </Paragraph>\n\n        <Text\n        style={ellipsis ? { width: 100 } : undefined}\n        ellipsis={ellipsis ? { tooltip: 'I am ellipsis now!' } : false}\n        >\n        Ant Design, a design language for background applications, is refined by Ant UED Team.\n        </Text> */}\n    </>\n}\n\nexport default Index","import React, { FC } from 'react'\n\nconst Babel: FC = () => {\n    return <>\n        this is babel page\n    </>\n}\n\nexport default Babel","import { FC } from 'react'\nimport { renderRoutes, RouteConfig } from 'react-router-config'\n\nconst Root: FC<RouteConfig> = ({route}) => renderRoutes(route.routes)\n\nexport default Root","import React, { FC } from 'react'\n\nconst ReactRedux: FC = () => {\n    return <>\n        this is ReactRedux page\n    </>\n}\n\nexport default ReactRedux","import React, { FC } from 'react'\nimport Markdown from 'markdown-to-jsx';\nimport { Typography, Collapse } from 'antd';\nimport \"./index.less\"\n\nconst { Panel } = Collapse;\nconst { Title, Paragraph, Text, Link } = Typography;\n\ninterface IOverridesItem {\n    [key: string]: any\n}\n\nconst TitleLevel = [1, 2, 3, 4, 5, 6]\n\nconst TextTypes = ['disabled', 'mark', 'code', 'keyboard', 'underline', 'delete', 'strong']\n\nconst defaultProps = {\n    options: {\n        overrides: {\n            Collapse,\n            Panel,\n            ...TitleLevel.reduce((pre, curr) => {\n                pre[`h${curr}`] = {\n                    component: Title,\n                    props: {\n                        level: curr\n                    },\n                }\n                return pre\n            }, {} as IOverridesItem),\n            ...TextTypes.reduce((pre, curr) => {\n                pre[curr] = {\n                    component: Text,\n                    props: {\n                        [curr]: true\n                    }\n                }\n                return pre\n            }, {} as IOverridesItem),\n            p: Paragraph,\n            span: Text,\n            a: Link\n        }\n    },\n    children: ''\n}\n\nconst MyMarkdown: FC = (props) => {\n    const renderProps = Object.assign({}, defaultProps, props)\n    return <div className=\"my-markdown-container\">\n        <Markdown options={renderProps.options}>{renderProps.children}</Markdown>\n    </div>\n}\n\nexport default MyMarkdown","import Root from '@/components/root'\nimport ReactRedux from '@/pages/react/react-redux'\nimport ReactRouter from '@/pages/react/react-router'\n\nconst reactPagesConfig = [\n    {\n        path: '/react',\n        name: 'React',\n        component: Root,\n        routes: [\n            {\n                path: '/react/redux',\n                exact: true,\n                name: 'Redux',\n                component: ReactRedux\n            },\n            {\n                path: '/react/router',\n                name: 'Router',\n                exact: true,\n                component: ReactRouter\n            }\n        ]\n    }\n]\n\nexport default reactPagesConfig","import React, { FC } from 'react'\nimport AntdMarkdown from '@/components/antdMarkdown'\nimport mdDoc from './index.md'\n\nconst ReactRouter: FC = () => {\n    return <AntdMarkdown>{mdDoc}</AntdMarkdown>\n}\n\nexport default ReactRouter","import Root from '@/components/root'\nimport Packing from '@/pages/others/packing'\n\nconst othersPagesConfig = [\n    {\n        path: '/others',\n        name: '其他',\n        component: Root,\n        routes: [\n            {\n              path: \"/others/packings\",\n              name: '打包对比',\n              component: Packing\n            }\n        ]\n    }\n]\n\nexport default othersPagesConfig","import React, { FC } from 'react'\nimport AntdMarkdown from '@/components/antdMarkdown'\nimport mdDoc from './index.md'\n\nconst Packing: FC = () => {\n    return <AntdMarkdown>{mdDoc}</AntdMarkdown>\n}\n\nexport default Packing","import App from '../App'\nimport Index from '../pages/index'\nimport Babel from '../pages/babel'\nimport reactPagesConfig from './react'\nimport othersPagesConfig from './others'\n\nconst routeConfig = [\n    {\n        component: App,\n        routes: [\n            {\n                path: '/',\n                name: '首页',\n                exact: true,\n                component: Index\n            },\n            {\n                name: 'Babel',\n                path: '/babel',\n                exact: true,\n                component: Babel\n            },\n            ...reactPagesConfig,\n            ...othersPagesConfig\n        ]\n    },\n]\n\nexport default routeConfig","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.less';\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { renderRoutes } from 'react-router-config'\nimport configureStore, { history } from './redux/configureStore'\nimport reportWebVitals from './reportWebVitals';\nimport routeConfig from './router'\n\nconst store = configureStore(/* provide initial state if any */)\n\nReactDOM.render(\n  // <HashRouter>\n  //   {renderRoutes(routeConfig)}\n  // </HashRouter>,\n  <Provider store={store}>\n    <ConnectedRouter history={history}> { /* place ConnectedRouter under Provider */ }\n      {renderRoutes(routeConfig)}\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n// ReactDOM.render(<Router routes={routeConfig} />, document.body)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","module.exports = \"## React Route \\n\\n### 基础\\n\\n<Collapse defaultActiveKey={['1']} ghost>\\n    <Panel header=\\\"This is panel header 1\\\" key=\\\"1\\\">\\n        #### 基础123\\n      - 123\\n      - 34567\\n      - 4567\\n    </Panel>\\n</Collapse>\\n\\n#### BrowserRouter\\n\\n#### HashRouter\\n\\n### 基础配置\\n\\n\";","module.exports = \"# This is Markdown\\n\\n#### You can edit me!\\n\\n[Markdown](http://daringfireball.net/projects/markdown/) lets you write content in a really natural way.\\n\\n  * You can have lists, like this one\\n  * Make things **bold** or *italic*\\n  * Embed snippets of `code`\\n  * Create [links](/)\\n  * ...\\n\\n<small>Sample content borrowed with thanks from [elm-markdown](http://elm-lang.org/examples/markdown) ❤️</small>\\n\\nYou can even include custom React components if you declare them in the \\\"overrides\\\" option.\\n\\n```\\n123\\n```\";"],"sourceRoot":""}